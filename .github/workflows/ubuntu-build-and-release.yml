name: Build and Release OC6P (MSYS2 only)

on:
  push:
    branches:
      - github-actions
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: |
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gfortran
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja

      - name: Add MSYS2 to Path
        run: |
          echo "C:/msys64/usr/bin" >> $GITHUB_PATH
          echo "C:/msys64/mingw64/bin" >> $GITHUB_PATH

      - name: Build with CMake and Ninja (MSYS2)
        run: |
          mkdir build
          cd build
          cmake -G "Ninja" ../
          ninja -j$(nproc)

      - name: Prepare Windows Artifact
        run: |
          mkdir -p artifacts
          cp build/oc6p.exe artifacts/

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: oc6p-windows
          path: artifacts/oc6p.exe

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print GitHub Ref
        run: echo "GITHUB REF: ${{ github.ref }}"

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: oc6p-windows
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/oc6p.exe
          asset_name: oc6p-windows
          asset_content_type: application/octet-stream